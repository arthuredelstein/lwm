import java.awt.geom.Point2D;
import java.util.Random;
import valelab.LocalWeightedMean;

rand = new Random();


// Demonstrate with a rectangular grid:

pointPairs = new HashMap();

addPair(pointPairss, srcX, srcY, destX, destY) {
   pointPairs.put(new Point2D.Double(srcX, srcY), new Point2D.Double(destX, destY));
}
addPair(pointPairs, 0,0,0,0);
addPair(pointPairs, 0,1,0,2);
addPair(pointPairs, 1,0,2,0);
addPair(pointPairs, 1,1,2,2);

/*
lwm = new LocalWeightedMean(1, pointPairs);
result = lwm.transform(new Point2D.Double(0.5, 0.5));
print("result: "+result);
*/

// Demo finding nearest neighbors:

pointList = new ArrayList();

for (int i=0;i<100l++i) {
   pointList.add(new Point2D.Double(rand.nextDouble(), rand.nextDouble()));
}

singlePoint = LocalWeightedMean.findNeighbor(new Point2D.Double(0.5, 0.5), pointList);
multiplePoints = LocalWeightedMean.findNeighbors(new Point2D.Double(0.5, 0.5), 10, pointList);


update();
